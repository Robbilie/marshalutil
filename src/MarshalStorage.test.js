"use strict";

const { MarshalStorage } = require(".");

test("return empty map when initialized with size 0", () => {
    const storage = new MarshalStorage(0, Buffer.alloc(0));
    expect(storage.getMap()).toEqual({});
});

test("return a map with the uint32le value from the buffer", () => {
    const storage = new MarshalStorage(256, Buffer.from("010000001b0000001500000027000000100000002d0000000b0000000400000024000000030000001a000000120000003d0000000d0000000500000006000000380000000800000048000000020000002a0000001d0000000a000000300000004500000016000000220000002500000046000000310000002000000007000000130000000e0000003f000000090000001c00000014000000290000001f0000000c0000000f000000320000004200000011000000350000001e000000180000002e000000170000002b000000280000002f00000023000000190000004b000000f60000003c0000004c0000004100000021000000370000002c00000026000000390000003b0000004a000000330000003600000034000000470000003a000000400000003e0000004400000043000000490000004e0000004d000000500000004f000000f70000005100000068000000550000006700000070000000520000005a0000006b000000640000005b0000005700000058000000530000005e000000600000005d00000059000000560000005400000065000000620000005c00000063000000610000005f0000006d0000006c0000006a00000069000000660000006f0000006e000000730000007100000072000000740000007500000077000000830000007900000081000000820000007e000000760000007d0000007c0000007a00000084000000780000007f0000007b0000008000000085000000f5000000e6000000880000009b000000d4000000a5000000d6000000890000009f000000a800000098000000b2000000e10000008a000000c4000000a0000000bf0000009000000093000000c90000008b000000b1000000c3000000a600000087000000d0000000ce000000cd00000086000000b4000000cf000000d1000000920000008e0000008c000000ba000000eb000000a70000008d000000bc000000ad000000ac000000b90000009c000000b0000000c5000000e9000000a40000009a0000009600000094000000df000000a9000000e800000095000000a30000008f000000e30000009700000091000000c6000000b5000000f2000000b8000000dd000000ed000000c2000000bd000000f000000099000000a1000000dc000000ae000000e20000009e000000da0000009d000000ee000000c1000000b7000000de000000aa000000b3000000cb000000c7000000a2000000db000000af000000ab000000ca000000b6000000d5000000d9000000ef000000f3000000d8000000d7000000e4000000c8000000be000000ec000000ea000000c0000000bb000000e5000000f4000000d3000000e7000000cc000000d2000000e0000000f1000000f8000000fc000000f9000000fa000000fb000000fd000000fe000000ff00000000010000", "hex"));
    const map = storage.getMap();
    expect(map[0]).toEqual(1);
    expect(map[1]).toEqual(27);
    expect(map[2]).toEqual(21);
});

test("store", () => {
    const storage = new MarshalStorage(256, Buffer.from("010000001b0000001500000027000000100000002d0000000b0000000400000024000000030000001a000000120000003d0000000d0000000500000006000000380000000800000048000000020000002a0000001d0000000a000000300000004500000016000000220000002500000046000000310000002000000007000000130000000e0000003f000000090000001c00000014000000290000001f0000000c0000000f000000320000004200000011000000350000001e000000180000002e000000170000002b000000280000002f00000023000000190000004b000000f60000003c0000004c0000004100000021000000370000002c00000026000000390000003b0000004a000000330000003600000034000000470000003a000000400000003e0000004400000043000000490000004e0000004d000000500000004f000000f70000005100000068000000550000006700000070000000520000005a0000006b000000640000005b0000005700000058000000530000005e000000600000005d00000059000000560000005400000065000000620000005c00000063000000610000005f0000006d0000006c0000006a00000069000000660000006f0000006e000000730000007100000072000000740000007500000077000000830000007900000081000000820000007e000000760000007d0000007c0000007a00000084000000780000007f0000007b0000008000000085000000f5000000e6000000880000009b000000d4000000a5000000d6000000890000009f000000a800000098000000b2000000e10000008a000000c4000000a0000000bf0000009000000093000000c90000008b000000b1000000c3000000a600000087000000d0000000ce000000cd00000086000000b4000000cf000000d1000000920000008e0000008c000000ba000000eb000000a70000008d000000bc000000ad000000ac000000b90000009c000000b0000000c5000000e9000000a40000009a0000009600000094000000df000000a9000000e800000095000000a30000008f000000e30000009700000091000000c6000000b5000000f2000000b8000000dd000000ed000000c2000000bd000000f000000099000000a1000000dc000000ae000000e20000009e000000da0000009d000000ee000000c1000000b7000000de000000aa000000b3000000cb000000c7000000a2000000db000000af000000ab000000ca000000b6000000d5000000d9000000ef000000f3000000d8000000d7000000e4000000c8000000be000000ec000000ea000000c0000000bb000000e5000000f4000000d3000000e7000000cc000000d2000000e0000000f1000000f8000000fc000000f9000000fa000000fb000000fd000000fe000000ff00000000010000", "hex"));
    storage.store({});
    expect(storage.get(0)).toEqual({});
});